<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>